#!/bin/sh
# xbalog06 Michal Balogh
# 10.3.2023

export POSIXLY_CORRECT=yes
export LC_ALL=C

# odstranit
export MOLE_RC="$HOME"/.config/molerc
EDITOR="nano"
VISUAL="code"



#------functions section---------------------------------------------------------------


# prints help message
print_help() {
  echo "Usage: mole -h"
  echo "       mole [-g GROUP] FILE"
  echo "       mole [-m] [FILTERS] [DIRECTORY]"
  echo "       mole list [FILTERS] [DIRECTORY]"
  echo ""
  echo "Description:"
  echo "  -h: Display this help message."
  echo "  FILE: Open the specified file."
  echo "  -g GROUP: Assign the opened file to the specified group."
  echo "  -m: Select the most frequently opened file instead of the last opened one."
  echo "  FILTERS: Apply filters to the list of files."
  echo "  DIRECTORY: Select the directory to search for files. If not specified, the current directory will be used."
  echo "  list: List the files that were opened with mole."
}

# opens file in set editor
open_editor() {
  if [ "$EDITOR" ]; then
    "$EDITOR" "$FILE"
  elif [ "$VISUAL" ]; then
    "$VISUAL" "$FILE"
  else
    vi "$FILE"
  fi
}

getdir(){
  if [ -z "$FILE" ]; then
    DIR=$(basename "$(realpath .)")
    echo $DIR
  else
    DIR=$(basename "$(dirname "$(realpath "$FILE")")")
  fi
}

log_mole_rc(){
  getdir
  echo "$DATETIME,$USER,$GROUP,$DIR,$FILE" >> "$MOLE_RC"
} 

list(){
  SORTED=$(sort -f -t ',' -k5 "$MOLE_RC")
  LONGESTNAME=$(awk -F ',' '{ if (length($5) > max) max=length($5) } END { print max }' "$MOLE_RC")
  LONGESTNAME=$((LONGESTNAME+1))
  echo "$SORTED" | awk -F ',' '{printf "%-'$LONGESTNAME's %s\n", $5":", $3}'
}

change_dir() {
  
  if [ "$FILE" ]; then
    { cd "$(realpath "$FILE")" || { echo "Could not open $FILE"; exit 1; } }
  fi


  getdir
  FILTERED_BY_DIR=$(awk -F',' -v dir="$DIR" '$4 == dir {print}' "$MOLE_RC")

  if [ "$MOST_USED" ]; then
    FILE=$(echo "$FILTERED_BY_DIR" | awk -F',' '{print $5}' | sort | uniq -c | sort -rn | head -n 1 | awk '{print $2}')
    echo "MOST USED FILE: $FILE"
  else 
    LAST_USED=$(echo "$FILTERED_BY_DIR" | tail -n 1 | awk -F ',' '{print $5}')
    FILE="$LAST_USED"
  fi
  
  open_file 
}

open_file() {
  
  if [ -z "$FILE" ]; then
    echo ERROR: Could not find file with the specified criteria.
    exit 1
  fi

  if [ "$GROUP" ]; then
    groupadd -f "$GROUP"
    chgrp "$GROUP" "$FILE"
  else
    GROUP=$(id -gn)
  fi

  open_editor "$FILE"

  log_mole_rc

}


#------code section--------------------------------------------------------------------

if [ -z "$(which realpath)" ]; then
  echo "Error: command realpath not found"
  exit 1
fi


if [ -z "$MOLE_RC" ]; then
  echo "Error: MOLE_RC is not set"
  exit 1
fi

if [ -f "$MOLE_RC" ]; then
  #echo "nasiel som $MOLE_RC"
  echo
else
  mkdir -p "$(dirname "$MOLE_RC")"
  touch "$MOLE_RC"
fi

#DATE=$(date +%Y-%m-%d)
DATETIME=$(date +%Y-%m-%d\ %H:%M:%S)

#echo "$DATE"

if [ "$1" = "list" ]; then
  LIST="TRUE"
  shift
fi


#reset OPTIND
OPTIND=1
# parse arguments
while getopts ":hg:m" option; do
  case "$option" in
  h)      print_help; exit 1;;
  g)      GROUP=$OPTARG;;
  m)      MOST_USED="TRUE";;
  :)      echo "Error: -$OPTARG requires an argument"; exit 1;;
  *)      echo "Invalid option: -$OPTARG" >&2
          echo "Try 'mole -h' for more information."
          exit 1;;
  esac
done

shift $((OPTIND-1))

if [ "$LIST" ]; then
  list
  exit 0
fi
  
if [ $# -ne 0 ]; then
  FILE=$1
  shift
  if [ -d "$FILE" ]; then 
    change_dir
  else
    open_file "$GROUP" "$FILE"
  fi
else
  echo "No file specified"
  change_dir
fi
#!/bin/sh
# xbalog06 Michal Balogh
# 10.3.2023

export POSIXLY_CORRECT=yes
export LC_ALL=C

#-------editors------------------------------------------------------------------------
#EDITOR="nano"
#VISUAL="code"
#DEFAULT="vi"

#------functions section---------------------------------------------------------------

# prints help message
print_help() {
  echo "Usage: mole -h"
  echo "       mole [-g GROUP] FILE"
  echo "       mole [-m] [FILTERS] [DIRECTORY]"
  echo "       mole list [FILTERS] [DIRECTORY]"
  echo ""
  echo "Description:"
  echo "  -h: Display this help message."
  echo "  FILE: Open the specified file."
  echo "  -g GROUP: Assign the opened file to the specified group."
  echo "  -m: Select the most frequently opened file instead of the last opened one."
  echo "  FILTERS: Apply filters to the list of files."
  echo "  DIRECTORY: Select the directory to search for files. If not specified, the current directory will be used."
  echo "  list: List the files that were opened with mole."
}

# opens file in set editor
open_editor() {
  if [ "$EDITOR" ]; then
    "$EDITOR" "$FILE"
  elif [ "$VISUAL" ]; then
    "$VISUAL" "$FILE"
  else
    vi "$FILE"
  fi
}

open_file() {

  REALPATH=$(realpath "$FILE")

  # checks wheter given file is file or dir
  if [ ! -f "$FILE" ]; then
    echo "$FILE is not file".
    if [ -d "$FILE" ]; then
      echo "$FILE is a directory."
      cd "$REALPATH" || open_editor
    fi
  fi

  open_editor "$FILE"

  if [ "$GROUP" ]; then
    sudo groupadd -f "$GROUP"
    sudo chgrp "$GROUP" "$FILE"
  fi

}

change_dir() {
  if [ -z "$DIR" ]; then
    DIR="./"
  fi

  if [ -d "$DIR" ]; then
    echo "$FILE is a directory."
    cd "$REALPATH" || open_editor
  fi

}

#------code section--------------------------------------------------------------------

if [ -z "$(which realpath)" ]; then
  echo "Error: command realpath not found"
  exit 1
fi


if [ -z "$MOLE_RC" ]; then
  echo "Error: MOLE_RC variable is not set"
  exit 1
fi


#DATE=$(date +%Y-%m-%d)
#echo "$DATE"

# parse arguments
while getopts ":hg:m" option; do
  case "$option" in
  h)      print_help; exit 1;;
  g)      GROUP=$OPTARG;;
  m)      DIR=$1; change_dir "$DIR";;
  :)      echo "Error: -$OPTARG requires an argument"; exit 1;;
  *)      echo "Invalid option: -$OPTARG" >&2
          echo "Try 'mole -h' for more information."
          exit 1;;
  esac
done
shift $((OPTIND-1))


if [ "$GROUP" ]; then
  echo "  -Group: $GROUP"
fi

echo "  -Number of args: $#"

if [ $# -eq 0 ]; then
  echo "No file specified"
  echo "Try 'mole -h' for more information."
  exit 1
fi

FILE=$1
echo "    -FILE $FILE" 

open_file "$GROUP" "$FILE"




#if [ "$1" = "list" ]; then
#  
#  if [ ! "$2" = "" ]; then
#    cd "$2" || exit 1
#  fi
#  ls -al
#fi

#FILE=$1
#open_file "$FILE"



